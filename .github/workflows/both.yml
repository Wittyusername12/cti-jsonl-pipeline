name: metrics-both-final

on:
  workflow_dispatch: {}   # manual only

jobs:
  both:
    runs-on: windows-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # ----- ID TRACK -----
      - name: Build LABEL top1_eval + gold (deterministic; no auto-detect)
  shell: pwsh
  run: |
    Write-Host "Preview of ce_top1_final_LABEL_metrics.csv:"
    Get-Content .\ce_top1_final_LABEL_metrics.csv -First 2

    # 1) Build top1_eval_label.csv with explicit columns
    $rows = Import-Csv .\ce_top1_final_LABEL_metrics.csv
    if (-not $rows) { throw "LABEL CSV has no rows." }

    $out = foreach($r in $rows) {
      # Expect exact columns: query, candidate, p_relevant
      [pscustomobject]@{
        q           = $r.query
        d           = $r.candidate
        p_relevant  = $r.p_relevant
      }
    }

    $out | Export-Csv -NoTypeInformation .\top1_eval_label.csv
    if (-not (Test-Path .\top1_eval_label.csv)) { throw "top1_eval_label.csv was not created." }

    # 2) Copy the gold file
    Copy-Item .\gold_label_unbalanced_nobom.jsonl .\gold_eval_label.jsonl -Force
    if (-not (Test-Path .\gold_eval_label.jsonl)) { throw "gold_eval_label.jsonl was not created." }

      - name: Micro (ID) warn-only
        shell: pwsh
        run: |
          py metrics_top1.py --top1_csv top1_eval_id.csv `
                             --gold_jsonl gold_eval_id.jsonl `
                             --out micro_id.txt
          $t = Get-Content micro_id.txt -Raw
          $m = [regex]::Match($t,'P@1 \(overall\):\s*([0-9.]+)')
          if($m.Success){ "Micro ID P@1=" + $m.Groups[1].Value } else { "::warning::No micro ID parse" }

      - name: Full metrics (ID)
        shell: pwsh
        run: |
          py metrics_top1.py --top1_csv top1_eval_id.csv `
                             --gold_jsonl gold_eval_id.jsonl `
                             --out metrics_id.txt
          Get-Content metrics_id.txt

      # ----- LABEL TRACK -----
      - name: Preflight (LABEL)
        shell: pwsh
        run: |
          py preflight.py --mode label `
            --top1 ce_top1_final_LABEL_metrics.csv `
            --gold gold_label_unbalanced_nobom.jsonl `
            --out-csv top1_eval.csv `
            --out-gold gold_eval.jsonl
          Rename-Item top1_eval.csv top1_eval_label.csv -Force
          Rename-Item gold_eval.jsonl gold_eval_label.jsonl -Force

      - name: Micro (LABEL) warn-only
        shell: pwsh
        run: |
          py metrics_top1.py --top1_csv top1_eval_label.csv `
                             --gold_jsonl gold_eval_label.jsonl `
                             --out micro_label.txt
          $t = Get-Content micro_label.txt -Raw
          $m = [regex]::Match($t,'P@1 \(overall\):\s*([0-9.]+)')
          if($m.Success){ "Micro LABEL P@1=" + $m.Groups[1].Value } else { "::warning::No micro LABEL parse" }

      - name: Full metrics (LABEL)
        shell: pwsh
        run: |
          py metrics_top1.py --top1_csv top1_eval_label.csv `
                             --gold_jsonl gold_eval_label.jsonl `
                             --out metrics_label.txt
          Get-Content metrics_label.txt

      # ----- SUMMARY (parse both and print/emit file) -----
      - name: Summary (ID vs LABEL)
        shell: pwsh
        run: |
          function Get-P1([string]$path){
            $t = Get-Content $path -Raw
            $m = [regex]::Match($t,'P@1 \(overall\):\s*([0-9.]+)')
            if(-not $m.Success){ return "NA" }
            return $m.Groups[1].Value
          }
          $p1_id    = Get-P1 "metrics_id.txt"
          $p1_label = Get-P1 "metrics_label.txt"
          "ID P@1    : $p1_id"    | Out-File both_summary.txt -Encoding utf8
          "LABEL P@1 : $p1_label" | Out-File both_summary.txt -Append -Encoding utf8
          Get-Content both_summary.txt

      - name: Upload artifacts (both)
        uses: actions/upload-artifact@v4
        with:
          name: both-artifacts
          path: |
            top1_eval_id.csv
            gold_eval_id.jsonl
            metrics_id.txt
            micro_id.txt
            top1_eval_label.csv
            gold_eval_label.jsonl
            metrics_label.txt
            micro_label.txt
            both_summary.txt
